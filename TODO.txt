X Limit paddle movement to screen edge
X Scale everything to the window in render()
X Implement ball
X Implement blocks and their collision detection
X Implement the basic game - a game over screen, a game win screen
X Implement sound effects
X Implement pausing
X Implement instructions
X Implement Menu screen and game restarting
X Implement music
X Implement resolution black rectangles
X implement the settings screen
X dataclass settings
X Settings improvements
    have a graphics settings class inside settings
    don't mutate game.settings through graphics
    in constants have a default settings object
    clean up new settings issue
X Remove balls list
X Implement invariant checker
X Color is-bright function
X Implement sets in keyboard_state
Fix the paddle collision bug
X Implement a Colours class
Implement "Press L to Launch"
Implement lives
Fix hardcoding (settings screen, block generation, etc.)
Fix screen_content being non-interactive

Separation issues:

can't get color out of block






BUGS:
X Flickering pause screen
    Fixed by rendering the pause screen only once, at the start, and only running input handling in the pause loop

QUESTIONS:

Isn't rendering only the changing parts of a screen more "efficient"?
X GameObjects inheritance
X Should I use sets in the input handler? Is that better?
X Ask about "backwards programming"
X One "Data" class can suffice for settings, constants etc. Is this inheritance? Can I just use less classes?
